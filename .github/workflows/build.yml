name: export-and-branch-solution
# Export solution from DEV environment
#  unpack it and prepare, commit and push a git branch with the changes

on:
  workflow_call:
    inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        type: string
      branch_name:
        description: 'name of the branch created'
        required: true
        type: string        
       #Do Not change these values
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
        type: string
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
        type: string
      solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions/
       type: string
    secrets:
      ENVIRONMENT_URL:
          required: true
      CLIENT_ID:
          required: true          
      TENANT_ID:
          required: true
      CLIENT_SECRET:
          required: true          

jobs:
  export-from-dev:
    environment: dev    
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: who-am-i action
        uses: microsoft/powerplatform-actions/who-am-i@v0
        with:
          environment-url: ${{ secrets.ENVIRONMENT_URL }}
          app-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ secrets.TENANT_ID }}

      - name: export-solution action
        uses: microsoft/powerplatform-actions/export-solution@v0
        with:
          environment-url: ${{ secrets.ENVIRONMENT_URL }}
          app-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ secrets.TENANT_ID }}
          solution-name: ${{ inputs.solution_name }}
          solution-output-file: ${{ inputs.solution_exported_folder}}/${{ inputs.solution_name }}.zip

      - name: check-solution action
        uses: microsoft/powerplatform-actions/check-solution@v0
        with:
          environment-url: ${{ secrets.ENVIRONMENT_URL }}
          app-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ secrets.TENANT_ID }}
          path: ${{ inputs.solution_exported_folder}}/${{ inputs.solution_name }}.zip
          checker-logs-artifact-name: logs
          
      - name: unpack-solution action
        uses: microsoft/powerplatform-actions/unpack-solution@v0
        with:
          solution-file: ${{ inputs.solution_exported_folder}}/${{ inputs.solution_name }}.zip
          solution-folder: ${{ inputs.solution_folder}}/${{ inputs.solution_name }}
          solution-type: 'Unmanaged'
          overwrite-files: true

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v6

      - name: branch-solution, prepare it for a PullRequest
        uses: microsoft/powerplatform-actions/branch-solution@v0
        with:
          solution-folder: ${{ inputs.solution_folder}}/${{ inputs.solution_name }}
          solution-target-folder: ${{ inputs.solution_target_folder}}/${{ inputs.solution_name }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allow-empty-commit: true
          branch-name:  ${{ steps.branch-name.outputs.current_branch }}
          clobber-branch: true
        if: ${{ github.ref != 'refs/heads/main' }} 

      - name: branch-solution, prepare it for a PullRequest
        uses: microsoft/powerplatform-actions/branch-solution@v0
        with:
          solution-folder: ${{ inputs.solution_folder}}/${{ inputs.solution_name }}
          solution-target-folder: ${{ inputs.solution_target_folder}}/${{ inputs.solution_name }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allow-empty-commit: true
          branch-name:  develop
          clobber-branch: true
        if: ${{ github.ref == 'refs/heads/main' }} 

      - name: logs push to branch
        run: |
          gh add logs
          git commit
          git push
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Display structure of downloaded files
        run: ls -R
