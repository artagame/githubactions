name: CICD

run-name: Deploy to ${{ inputs.deploy_target }} by @${{ github.actor }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
  workflow_dispatch:
    inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        default: ALMLab
       #Do Not change these values
       #Export solution inputs
      #=============================================================================
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions/
      #=============================================================================
      #Do Not change these values
       #Import solution inputs
      #=============================================================================
      solution_shipping_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/ship/
      solution_outbound_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_source_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions/
      solution_release_folder:
       description: 'folder where the released binaries are going to be hosted *do not change*'
       required: true
       default: out/release
      #=============================================================================

  release:
    types: [created]

env:
#edit your values here
  BUILD_ENVIRONMENT_URL: ${{ secrets.BUILD_ENVIRONMENT_URL }}
  PRODUCTION_ENVIRONMENT_URL: ${{ secrets.PRODUCTION_ENVIRONMENT_URL }}
  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  TENANT_ID: ${{ secrets.TENANT_ID }}

jobs:
  build:
      uses: artagame/githubactions/.github/workflows/export-and-branch-solution-with-spn-auth.yml@main
      with:
        solution_name:  ${{ github.event.inputs.solution_name }}
        ENVIRONMENT_URL:  ${{env.BUILD_ENVIRONMENT_URL}}
        CLIENT_ID:  ${{env.CLIENT_ID}}
        TENANT_ID:  ${{env.TENANT_ID}}
        solution_exported_folder: ${{ github.event.inputs.solution_exported_folder }}
        solution_folder: ${{ github.event.inputs.solution_folder }}
        solution_target_folder: ${{ github.event.inputs.solution_target_folder }}

  release:
      needs: [ build ]
      uses: artagame/githubactions/.github/workflows/release-solution-to-prod-with-spn-auth.yml@main
      with:
        solution_name:  ${{ github.event.inputs.solution_name }}
        BUILD_ENVIRONMENT_URL:  ${{env.BUILD_ENVIRONMENT_URL}}
        PRODUCTION_ENVIRONMENT_URL:  ${{env.BUILD_ENVIRONMENT_URL}}
        CLIENT_ID:  ${{env.CLIENT_ID}}
        TENANT_ID:  ${{env.TENANT_ID}}
        solution_shipping_folder: ${{ github.event.inputs.solution_shipping_folder }}
        solution_outbound_folder: ${{ github.event.inputs.solution_outbound_folder }}
        solution_source_folder: ${{ github.event.inputs.solution_source_folder }}
        solution_release_folder: ${{ github.event.inputs.solution_release_folder }}
